library("arules")
test_trans <- read.transactions(filename = "C:\\Users\\Vladislav\\Dekstop\\transactions.csv", format="basket", sep = ",", encoding = "UTF-8")
test_trans <- read.transactions(filename = "C:\\Users\\Vladislav\\Dekstop\\transactions.csv", format="basket", sep = ",", encoding = "UTF-8")
test_trans <- read.transactions("C:\\Users\\Vladislav\\Dekstop\\transactions.csv", format="basket", sep = ",", encoding = "UTF-8")
test_trans <- read.transactions(filename = "C:\\Users\\Vladislav\\Dekstop\\transactions.csv", format="basket", sep = ",", encoding = "UTF-8")
library(datasets)
library(arulesViz)
data(filename = "C:\\Users\\Vladislav\\Desktop\\transactions.csv")
data(filename = "C:\\Users\\Vladislav\\Desktop\\transactions.csv")
test_trans <- read.transactions(filename = "C:\\Users\\Vladislav\\Dekstop\\tipidor.csv", format="basket", sep = ",", encoding = "UTF-8")
test_trans <- read.transactions(filename("C:\\Users\\Vladislav\\Dekstop\\tipidor.csv)", format="basket", sep = ",", encoding = "UTF-8")
test_trans <- read.transactions(filename("C:\\Users\\Vladislav\\Dekstop\\tipidor.csv"), format="basket", sep = ",", encoding = "UTF-8")
dataset
dataset <- read.csv("C:\\Users\\Vladislav\\Desktop\\tipidor.csv", encoding = "UTF-8")
inspect(dataset[1])
inspect(dataset)
view(dataset)
View(dataset)
dataset <- read.csv("C:\\Users\\Vladislav\\Desktop\\tipidor.csv", encoding = "UTF-8", headers = FALSE)
dataset <- read.csv("C:\\Users\\Vladislav\\Desktop\\tipidor.csv", encoding = "UTF-8", header = FALSE)
trans <- read.transactions(dataset, format = "basket", sep = ",")
trans <- read.transactions(dataset, format = "basket", sep = "," cols = NULL)
trans <- read.transactions("dataset", format = "basket", sep = ",")
trans <- read.transactions("C:\\Users\\Vladislav\\Desktop\\tipidor.csv", format = "basket", sep = ",")
inspect(trans)
rules = apriori(trans, parameter=list(supp=0.3, conf = 0.2, target = "rules"))
View(rules)
inspect(rules)
dataset <- read.csv("C:\\Users\\Vladislav\\Desktop\\dataset.csv", encoding = "UTF-8", header = FALSE)
trans <- read.transactions("C:\\Users\\Vladislav\\Desktop\\dataset.csv", format = "basket", sep = ",")
trans <- read.transactions("C:\\Users\\Vladislav\\Desktop\\dataset.csv", format = "basket", sep = ",", quote = "")
inspect(trans)
trans <- read.transactions("C:\\Users\\Vladislav\\Desktop\\dataset.csv", format = "basket", sep = ",", quote = "", encoding = "UTF-8")
inspect(trans)
trans <- read.transactions("C:\\Users\\Vladislav\\Desktop\\tipidor.csv", format = "basket", sep = ",")
transactions <- read.transactions("C:\\Users\\Vladislav\\Desktop\\dataset.csv", format = "basket", sep = ",", quote = "", encoding = "UTF-8")
trans
transactions
inspect(trans)
inspect(transactions)
transactions <- read.transactions("C:\\Users\\Vladislav\\Desktop\\dataset.csv", format = "basket", sep = ",", quote = ";", encoding = "UTF-8")
transactions <- read.transactions("C:\\Users\\Vladislav\\Desktop\\dataset.csv", format = "basket", sep = ",", quote = " ", encoding = "UTF-8")
warnings()
inspect(transactions)
transactions <- read.transactions("C:\\Users\\Vladislav\\Desktop\\dataset.csv", format = "basket", sep = ",", quote = NULL, encoding = "UTF-8")
inspect(transactions)
rules = apriori(transactions, parameter=list(supp=0.1, conf = 0.1, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.1, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.01, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.02, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.025, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.030, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.04, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.025, conf = 0.01, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.02, conf = 0.01, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.01, conf = 0.01, target = "rules"))
inspect(rules)
inspect(rules[20])
inspect(rules[:20])
inspect(rules[1:20])
rules = apriori(transactions, parameter=list(supp=0.05, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.06, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.07, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.09, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.095, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.01, conf = 0.01, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.1, conf = 0.01, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.1, conf = 0.02, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.1, conf = 0.1, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.1, conf = 1, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.1, conf = 0.02, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.1, conf = 0.002, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.1, conf = 0.0002, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.15, conf = 0.0002, target = "rules"))
inspect(rules)
rules = apriori(transactions, parameter=list(supp=0.01, conf = 0.1, target = "rules"))
inspect(head(rules))
write.csv(rules[,"lhs","rhs","support","confidence","lift"], file="result.csv", row.names = FALSE);
write.csv(rules[,"lhs","rhs","support","confidence","lift"], file="result.csv", row.names = FALSE)
write.csv(rules[,"lhs","rhs","support","confidence","lift"], file="result.csv", row.names = TRUE)
as(rules, "data.frame");
write.csv(rules[,"lhs","rhs","support","confidence","lift"], file="result.csv", row.names = TRUE)
View(rules)
rules = apriori(transactions, parameter=list(supp=0.01, conf = 0.1, target = "rules"))
View(rules)
Inspect(rules)
library(arules)
inspect(rules)
inspect(sort(rules,by="confidence")[1:50])
inspect(sort(rules,by="lift")[1:50])
rules.count
rules
rules = apriori(transactions, parameter=list(supp=0.019, conf = 0.1, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.04, conf = 0.1, target = "rules"))
plot(rules)
rules = apriori(transactions, parameter=list(supp=0.02, conf = 0.1, target = "rules"))
plot(rules)
rules = apriori(transactions, parameter=list(supp=0.01, conf = 0.1, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.009, conf = 0.1, target = "rules"))
plot(rules)
rules = apriori(transactions, parameter=list(supp=0.011, conf = 0.1, target = "rules"))
head(quality(rules))
plot(rules, measure=c("support", "lift"), shading="confidence")
plut(rules, shading="order", control=list(main="Two-key plot"))
plot(rules, shading="order", control=list(main="Two-key plot"))
sel <- plot(rules, measure=c("support", "lift"), shading="confidence", interactive=TRUE)
sel <- plot(rules, measure=c("support", "lift"), shading="confidence", interactive=TRUE)
sel <- plot(rules, measure=c("support", "lift"), shading="confidence", interactive=TRUE)
sel <- plot(rules, measure=c("support", "lift"), shading="confidence", interactive=TRUE)
subrules <- head(sort(rules, by="lift"), 10)
plot(subrules,method="graph")
subrules <- head(sort(rules, by="support"), 10)
plot(subrules,method="graph")
plot(subrules,method="graph", control = list(type="itemsets"))
plot(subrules,method="paracoord", control = list(reorder=TRUE))
plot(subrules,method="paracoord",control = list(reorder=TRUE))
rules = apriori(transactions, parameter=list(supp=0.08, conf = 0.1, target = "rules"))
plot(rules)
subrules <- head(sort(rules, by="lift"), 10)
plot(subrules,method="paracoord",control=list(reorder=TRUE))
plot(subrules,method="graph", control = list(type="itemsets"))
subrules
inspect(subrules)
rules = apriori(transactions, parameter=list(supp=0.05, conf = 0.1, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.02, conf = 0.1, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.035, conf = 0.1, target = "rules"))
rules = apriori(transactions, parameter=list(supp=0.030, conf = 0.1, target = "rules"))
subrules <- head(sort(rules, by="lift"), 10)
inspect(sub())
inspect(subrules)
eclatRules = eclat(transactions,parameter = list(supp=0.1, maxlen = 10))
plot(eclatRules)
eclatRules = eclat(transactions,parameter = list(supp=0.1, maxlen = 15))
eclatRules <- eclat(transactions, parameter = list(supp = 0.035, maxlen = 15))
inspect(eclatRules)
write.csv(rules[,"lhs","rhs","support","confidence","lift"], file="result.csv", row.names = FALSE);
write(rules,)
documentid <- sample(1:9999999, 1)
documentid
documentid <- as.Date(as.character(sample(1:99999999, 1)), format="%Y%m%d");
documentid
documentid
documentid <- as.Date(as.character(sample(1:99999999, 1)), format="%Y%m%d");
documentid
documentid <- as.character(sample(1:99999, 1))
documentid
documentid <- as.character(sample(1:99999999, 1))
filename <- paste("restult", documentid, sep ="#");
filename
filename <- paste("test", filename)
filename
writepath <- "C:\\Users\\Vladislav\\Desktop\\job_skills_analytics\\Apriori\\bin\\Debug\\RSCRIPT\\";
documentid <- as.character(sample(1:99999999, 1));
filename <- paste("result", documentid, sep ="#");
filename <- paste(writepath, filename);
filename <- paste(filename,".csv");
filename
documentid <- as.character(sample(1:99999999, 1));
filename <- paste("result", documentid, sep ="#");
filename <- paste(writepath, filename sep = "");
filename <- paste(filename,".csv", sep = "");
documentid <- as.character(sample(1:99999999, 1));
filename <- paste("result", documentid, sep ="#");
filename <- paste(writepath, filename, sep = "");
filename <- paste(filename,".csv", sep = "");
filename
write.csv(rules[,"lhs","rhs","support","confidence","lift"], file=filename, row.names = FALSE);
write(rules,file=filename,sep=",")
write(rules,file=filename,sep=" ")
documentid <- as.character(sample(1:99999999, 1));
filename <- paste("result", documentid, sep ="#");
filename <- paste(writepath, filename, sep = "");
filename <- paste(filename,".csv", sep = "");
write(rules,file=filename,sep=" ")
documentid <- as.character(sample(1:99999999, 1));
filename <- paste("result", documentid, sep ="#");
filename <- paste(writepath, filename, sep = "");
filename <- paste(filename,".csv", sep = "");
write(rules,file=filename,sep=" ", row.names = FALSE)
calculate.rules.apriori <- function(sup, conf, transactions) {
apriori_rules <- apriori(transactions, parameter=list(supp=sup, conf=conf, target="rules"));
return(rules);
}
get.data <- function(path) {
dataset <- read.transactions(path, format = "basket", sep = ",", quote = NULL, encoding = "UTF-8");
return(dataset);
}
path <- "C:\\Users\\Vladislav\\Desktop\\job_skills_analytics\\Apriori\\bin\\Debug\\RSCRIPT\\dataset.csv";
transactionsFuncModelTest <- get.data(path)
aprioriFuncModelsTest <- calculate.rules.apriori(0.01, 0.1, transactionsFuncModelTest)
eclatRules <- eclat(transactions, parameter = list(supp = 0.035, maxlen = 15));
plot(eclatRules)
plot(eclatRules, measure=c("support", "lift"), shading="confidence");
plot(eclatRules)
inspect(eclatRules)
write(eclatRules, file=filename,sep="");
write(eclatRules, file=filename,sep="");
write(eclatRules, file=filename,sep="");
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
write(eclatRules, file=filename,sep="");
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
write(eclatRules, file=filename,sep="");
write(eclatRules, file=filename,sep="");
gc();
write(eclatRules, file=filename,sep="");
gc();
write(aprioriRules, file = filenameApriori, sep="");
write(aprioriRules, file = filenameApriori, sep="");
write(aprioriRules, file = filenameApriori, sep="");
#filenameEclat <- generate.file.name();
filenameEclat <- generate.file.name();
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
filenameEclat <- generate.file.name("ELCAT");
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
filenameEclat <- generate.file.name("ELCAT");
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
filenameEclat <- generate.file.name("ELCAT");
eclatRules <- eclat(transactions, parameter = list(supp = 0.025, maxlen = 15));
gc();
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/bin/Debug/RSCRIPT/rscript.R', echo=TRUE)
setwd("C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/RSCRIPT")
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/RSCRIPT/rscript.R', echo=TRUE)
source("rscript.R, chdir=T")
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/RSCRIPT/rscript.R', echo=TRUE)
source('C:/Users/Vladislav/Desktop/job_skills_analytics/Apriori/RSCRIPT/rscript.R', echo=TRUE)
